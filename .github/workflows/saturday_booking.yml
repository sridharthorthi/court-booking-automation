name: Saturday Court Booking

on:
  schedule:
    - cron: '30 16 * * 6'  # 9:45 AM Saturday
    - cron: '45 16 * * 6'  # 9:45 AM Saturday
    - cron: '50 16 * * 6'  # 9:50 AM Saturday
    - cron: '55 16 * * 6'  # 9:55 AM Saturday
    - cron: '0 17 * * 6'  # 10:00 AM Saturday
    - cron: '5 17 * * 6'  # 10:05 AM Saturday
  workflow_dispatch:  # Allows manual triggering for testing

permissions:
  issues: write

jobs:
  book-courts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager
        
    - name: Run booking script
      env:
        BOOKING_USERNAME: ${{ secrets.BOOKING_USERNAME }}
        PASSWORD: ${{ secrets.BOOKING_PASSWORD }}
      run: python booking_script.py

    - name: Create Issue on Completion
      if: always()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const status = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
          
          // Determine the title based on the status content
          let title = '';
          if (status.includes("Successfully booked both")) {
            title = 'üéØ Successfully Booked Both Tuesday and Thursday Slots';
          } else if (status.includes("might not be opened yet")) {
            title = '‚è≥ Slots Not Yet Opened - Will Try Again Next Run';
          } else if (status.includes("Partial booking success")) {
            title = '‚ö†Ô∏è Partial Success - Only One Slot Booked';
          } else if (status.includes("fully booked")) {
            title = '‚ùå Slots Already Full';
          } else {
            title = '‚ùå Booking Failed - Check Details';
          }

          const timestamp = new Date().toLocaleString('en-US', { timeZone: 'America/Los_Angeles' });
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `${title} (${timestamp})`,
            body: `Status Update from Court Booking Script\n\nRunning Time: ${timestamp}\n\n${status}`,
            labels: [title.includes('Successfully') ? 'success' : 'failure']
          });
